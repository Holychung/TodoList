{"ast":null,"code":"var _jsxFileName = \"/Users/holy/holy/my-app/src/App.js\";\nimport React from 'react';\nimport axios from 'axios'; // import Input from '@material-ui/core/Input';\n\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DateFormatInput } from 'material-ui-next-pickers';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Icon from '@material-ui/core/Icon';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo_list: [],\n      name: \"\",\n      description: \"\",\n      due: \"\",\n      due_UTC: \"\",\n      createdAt: \"2019-05-15 18:36:41\",\n      updatedAt: \"2019-05-15 18:36:41\",\n      color: \"\"\n    };\n    this.createTodo = this.createTodo.bind(this);\n    this.fetchTodo = this.fetchTodo.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeDesciption = this.handleChangeDesciption.bind(this);\n    this.handleChangeColor = this.handleChangeColor.bind(this);\n    this.handleChangeDue = this.handleChangeDue.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.updateTodo = this.updateTodo.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost/api/Todo/read.php').then(({\n      data: todo\n    }) => this.fetchTodo(todo)).catch(error => console.log(error));\n  }\n\n  updateTodo(data) {\n    data['isDone'] = !data['isDone'];\n    let id = data['id'];\n    let new_data = this.state.todo_list.map(todo => todo.id === id ? Object.assign(todo, {\n      isDone: data['isDone']\n    }) : todo);\n    console.log(data['id']); // this.setState({\n    //   todo_list: this.state.todo_list.map(todo => \n    //     todo.id == id ? Object.assign(todo, { isDone: data['isDone']}) : todo \n    //   )\n    // })\n\n    this.setState({\n      todo_list: obj\n    }); // axios.post('http://localhost/api/Todo/update.php', data)\n    // .then(response=>console.log(response))\n    // .catch(error => console.log(error))\n  }\n\n  fetchTodo(t) {\n    this.setState({\n      todo_list: t\n    });\n  }\n\n  createTodo() {\n    let state = this.state;\n    let new_todo = {};\n    new_todo['name'] = state.name;\n    new_todo['description'] = state.description;\n    new_todo['due'] = state.due;\n    new_todo['createdAt'] = state.createdAt;\n    new_todo['updatedAt'] = state.updatedAt;\n    new_todo['color'] = state.color;\n    axios.post('http://localhost/api/Todo/create.php', new_todo).then(response => console.log(response)).catch(error => console.log(error)); // update state to force re-render\n\n    new_todo['id'] = state.todo_list.length + 1; // for deep copy new_todo\n\n    let obj = JSON.parse(JSON.stringify(new_todo));\n    this.setState({\n      todo_list: this.state.todo_list.concat(obj),\n      name: \"\",\n      description: \"\",\n      due: \"\",\n      due_UTC: \"\",\n      createdAt: \"\",\n      updatedAt: \"\",\n      color: \"\"\n    });\n  }\n\n  deleteTodo(id) {\n    axios.post('http://localhost/api/Todo/delete.php', id).then(response => console.log(response)).catch(error => console.log(error));\n    this.setState({\n      todo_list: this.state.todo_list.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleChangeName(new_name) {\n    this.setState({\n      name: new_name\n    });\n  }\n\n  handleChangeDesciption(new_desc) {\n    this.setState({\n      description: new_desc\n    });\n  }\n\n  handleChangeDue(date) {\n    let UTC = date;\n    date = this.formatDate(date);\n    this.setState({\n      due: date\n    });\n    this.setState({\n      due_UTC: UTC\n    });\n  }\n\n  handleChangeColor(new_color) {\n    this.setState({\n      color: new_color\n    });\n  }\n\n  formatDate(date) {\n    let monthNames = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n    let hour = date.getHours();\n    let minute = date.getMinutes();\n    let seconds = date.getSeconds(); // format 2019-05-15 18:36:41\n\n    let new_date = year + '-' + monthNames[monthIndex] + '-' + day + ' ' + hour + ':' + minute + ':' + seconds;\n    return new_date;\n  }\n\n  render() {\n    let todo_list = this.state.todo_list; // console.log(todo_list)\n\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"PHP TodoList\"), React.createElement(\"div\", {\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \" An easy way to manage your work.\", React.createElement(\"span\", {\n      className: \"caret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"|\")), React.createElement(\"div\", {\n      className: \"container mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-name\",\n      label: \"Title\",\n      className: \"input-name mt-0 mx-3\",\n      value: this.state.name,\n      onChange: e => this.handleChangeName(e.target.value),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-name\",\n      label: \"Description\",\n      className: \"input-name mt-0 mx-3\",\n      value: this.state.description,\n      onChange: e => this.handleChangeDesciption(e.target.value),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row justify-content-center mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-small mx-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(DateFormatInput, {\n      className: \"datePicker\",\n      label: \"Deadline\",\n      name: \"date-input\",\n      dateFormat: \"yyyy-MM-dd\",\n      value: this.state.due_UTC,\n      onChange: e => this.handleChangeDue(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: \"formcontrol mx-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Color\"), React.createElement(Select, {\n      native: true,\n      value: this.state.color,\n      onChange: e => this.handleChangeColor(e.target.value),\n      inputProps: {\n        name: 'age',\n        id: 'age-native-simple'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"EDEDED\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.color), React.createElement(\"option\", {\n      value: \"EDEDED\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Grey\"), React.createElement(\"option\", {\n      value: \"D4DDEE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Blue\"), React.createElement(\"option\", {\n      value: \"FFE5D4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Red\"), React.createElement(\"option\", {\n      value: \"DDF3D9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Green\"), React.createElement(\"option\", {\n      value: \"FFF4CA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Yellow\"))), React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"Add\",\n      className: \"addTodo align-self-center mx-4\",\n      size: \"small\",\n      onClick: () => this.createTodo(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, todo_list.length === 0 ? React.createElement(\"div\", {\n      className: \"container cardWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }) : todo_list.map(todo => React.createElement(\"div\", {\n      key: todo.id,\n      className: \"container cardWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(todo.color, \" colorTag\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row justify-content-center todoCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, todo.isDone === '0' ? todo.isDone = false : todo.isDone = true, console.log(todo.isDone), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: todo.isDone,\n        onChange: () => this.updateTodo(todo) // value=\"checkedG\"\n        ,\n        className: \"m-0\",\n        classes: {\n          root: classes.root,\n          checked: classes.checked\n        } // style={{ width: 36, height: 36 }}\n        // icon={<CheckBoxOutlineBlankIcon style={{ fontSize: 20 }} />}\n        // checkedIcon={<CheckBoxIcon style={{ fontSize: 20 }} />}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }),\n      label: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center d-flex col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"todoName align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, todo.name)), React.createElement(Fab, {\n      color: \"secondary\",\n      size: \"small\",\n      \"aria-label\": \"Edit\",\n      className: \"align-self-end mb-2\",\n      onClick: () => this.updateTodo(todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"edit_icon\")), React.createElement(Fab, {\n      \"aria-label\": \"Delete\",\n      size: \"small\",\n      className: \"deleteTodo align-self-end mb-2\",\n      onClick: () => this.deleteTodo(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500]\n    }\n  },\n  checked: {}\n}; // const tmp_data = {\n//   \"name\": \"Yee\",\n//   \"description\" : \"Yee\",\n//   \"due\": \"2019-05-15 18:36:41\",\n//   \"createdAt\": \"2019-05-15 18:36:41\",\n//   \"updatedAt\": \"2019-05-15 18:36:41\",\n//   \"color\": \"EDEDED\"\n// }\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/holy/holy/my-app/src/App.js"],"names":["React","axios","TextField","InputLabel","FormControl","Select","Fab","AddIcon","DeleteIcon","DateFormatInput","FormControlLabel","Checkbox","withStyles","green","Icon","App","Component","constructor","props","state","todo_list","name","description","due","due_UTC","createdAt","updatedAt","color","createTodo","bind","fetchTodo","deleteTodo","handleChangeName","handleChangeDesciption","handleChangeColor","handleChangeDue","formatDate","updateTodo","componentDidMount","get","then","data","todo","catch","error","console","log","id","new_data","map","Object","assign","isDone","setState","obj","t","new_todo","post","response","length","JSON","parse","stringify","concat","filter","new_name","new_desc","date","UTC","new_color","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","seconds","getSeconds","new_date","render","classes","e","target","value","root","checked","styles"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios'\n\n// import Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {DateFormatInput} from 'material-ui-next-pickers'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nimport Icon from '@material-ui/core/Icon';\n\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      todo_list: [],\n      name: \"\",\n      description: \"\",\n      due: \"\",\n      due_UTC: \"\",\n      createdAt: \"2019-05-15 18:36:41\",\n      updatedAt: \"2019-05-15 18:36:41\",\n      color: \"\"\n    }\n    this.createTodo = this.createTodo.bind(this)\n    this.fetchTodo = this.fetchTodo.bind(this)\n    this.deleteTodo = this.deleteTodo.bind(this)\n    this.handleChangeName = this.handleChangeName.bind(this)\n    this.handleChangeDesciption = this.handleChangeDesciption.bind(this)\n    this.handleChangeColor = this.handleChangeColor.bind(this)\n    this.handleChangeDue = this.handleChangeDue.bind(this)\n    this.formatDate = this.formatDate.bind(this)\n    this.updateTodo = this.updateTodo.bind(this)\n  }\n\n  componentDidMount(){\n    axios.get('http://localhost/api/Todo/read.php')\n    .then(({data: todo}) => this.fetchTodo(todo))\n    .catch(error => console.log(error))\n  }\n  updateTodo(data){\n    data['isDone'] = !data['isDone']\n    let id = data['id']\n    let new_data = this.state.todo_list.map(todo => \n        todo.id === id ? Object.assign(todo, { isDone: data['isDone']}) : todo \n      )\n    console.log(data['id'])\n\n    // this.setState({\n    //   todo_list: this.state.todo_list.map(todo => \n    //     todo.id == id ? Object.assign(todo, { isDone: data['isDone']}) : todo \n    //   )\n    // })\n    this.setState({\n      todo_list: obj\n    })\n    // axios.post('http://localhost/api/Todo/update.php', data)\n    // .then(response=>console.log(response))\n    // .catch(error => console.log(error))\n  }\n  fetchTodo(t){\n    this.setState({ todo_list: t })\n  }\n  createTodo() {\n    let state = this.state\n    let new_todo = {}\n    new_todo['name'] = state.name\n    new_todo['description'] = state.description\n    new_todo['due'] = state.due\n    new_todo['createdAt'] = state.createdAt\n    new_todo['updatedAt'] = state.updatedAt\n    new_todo['color'] = state.color\n    \n    axios.post('http://localhost/api/Todo/create.php', new_todo)\n    .then(response=>console.log(response))\n    .catch(error => console.log(error))\n    \n    // update state to force re-render\n    new_todo['id'] = state.todo_list.length + 1\n    // for deep copy new_todo\n    let obj = JSON.parse(JSON.stringify(new_todo))\n    this.setState({\n        todo_list: this.state.todo_list.concat(obj),\n        name: \"\",\n        description: \"\",\n        due: \"\",\n        due_UTC: \"\",\n        createdAt: \"\",\n        updatedAt: \"\",\n        color: \"\"\n    })\n  }\n  deleteTodo(id){\n    axios.post('http://localhost/api/Todo/delete.php', id)\n    .then(response=>console.log(response))\n    .catch(error => console.log(error))\n\n    this.setState({\n      todo_list: this.state.todo_list.filter(todo => todo.id !== id)\n    })\n  }\n  handleChangeName(new_name){\n    this.setState({\n      name: new_name\n    })\n  }\n  handleChangeDesciption(new_desc){\n    this.setState({\n      description: new_desc\n    })\n  }\n  handleChangeDue(date){\n    let UTC = date\n    date = this.formatDate(date)\n    this.setState({\n      due: date\n    })\n    this.setState({\n      due_UTC: UTC\n    })\n\n  }\n  handleChangeColor(new_color){\n    this.setState({\n      color: new_color\n    })\n  }\n  formatDate(date){\n    let monthNames = [\n      \"01\", \"02\", \"03\",\n      \"04\", \"05\", \"06\", \"07\",\n      \"08\", \"09\", \"10\",\n      \"11\", \"12\"\n    ];\n\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n    let hour = date.getHours();\n    let minute = date.getMinutes();\n    let seconds = date.getSeconds();\n\n    // format 2019-05-15 18:36:41\n    let new_date = year + '-' + monthNames[monthIndex] + '-' + day + ' ' + hour +':' + minute + ':' + seconds\n    return new_date;\n  }\n\n  render() {\n    let todo_list = this.state.todo_list\n    // console.log(todo_list)\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <h1>PHP TodoList</h1>\n        <div className=\"tag\"> An easy way to manage your work. \n          <span className=\"caret\">|</span>\n        </div>\n        <div className=\"container mt-3\">\n          <div className=\"row justify-content-center\">\n            <TextField\n              id=\"standard-name\"\n              label=\"Title\"\n              className=\"input-name mt-0 mx-3\"\n              value={this.state.name}\n              onChange={(e) => this.handleChangeName(e.target.value)}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-name\"\n              label=\"Description\"\n              className=\"input-name mt-0 mx-3\"\n              value={this.state.description}\n              onChange={(e) => this.handleChangeDesciption(e.target.value)}\n              margin=\"normal\"\n            />\n          </div>\n          \n          <div className=\"row justify-content-center mt-3\">  \n            <div className=\"w-small mx-3\">\n              <DateFormatInput \n                className='datePicker'\n                label=\"Deadline\"\n                name='date-input'\n                dateFormat=\"yyyy-MM-dd\" \n                value={this.state.due_UTC} \n                onChange={(e) => this.handleChangeDue(e)}/>\n            </div>\n\n            <FormControl className=\"formcontrol mx-3\">\n              <InputLabel htmlFor=\"age-native-simple\">Color</InputLabel>\n              <Select\n                native\n                value={this.state.color}\n                onChange={(e) => this.handleChangeColor(e.target.value)}\n                inputProps={{\n                  name: 'age',\n                  id: 'age-native-simple',\n                }}\n              >\n                <option value=\"EDEDED\">{this.state.color}</option>\n                <option value=\"EDEDED\">Grey</option>\n                <option value=\"D4DDEE\">Blue</option>\n                <option value=\"FFE5D4\">Red</option>\n                <option value=\"DDF3D9\">Green</option>\n                <option value=\"FFF4CA\">Yellow</option>\n              </Select>\n            </FormControl>\n\n            <Fab \n              color=\"primary\" \n              aria-label=\"Add\" \n              className=\"addTodo align-self-center mx-4\" \n              size=\"small\" \n              onClick={ () => this.createTodo() }>\n              <AddIcon />\n            </Fab>\n          </div>\n        </div>\n\n        <br/>\n        <div>\n        {\n          todo_list.length === 0 ?\n            <div className=\"container cardWidth\"></div>\n          :  \n          todo_list.map(\n            (todo) => \n              <div key={todo.id} className=\"container cardWidth\">\n                <div className={`${todo.color} colorTag`} />\n                <div className=\"row justify-content-center todoCard\">\n                  {todo.isDone === '0' ? todo.isDone = false : todo.isDone = true}\n                  {console.log(todo.isDone)}\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={todo.isDone}\n                        onChange={() => this.updateTodo(todo)}\n                        // value=\"checkedG\"\n                        className=\"m-0\"\n                        classes={{\n                          root: classes.root,\n                          checked: classes.checked,\n                        }}\n                        // style={{ width: 36, height: 36 }}\n                        // icon={<CheckBoxOutlineBlankIcon style={{ fontSize: 20 }} />}\n                        // checkedIcon={<CheckBoxIcon style={{ fontSize: 20 }} />}\n                      />\n                    }\n                    label=\"\"\n                  />\n\n                  <div className=\"text-center d-flex col-8\">\n                    <h3 className=\"todoName align-self-center\">{todo.name}</h3>\n                  </div>\n\n                  <Fab \n                      color=\"secondary\"\n                      size=\"small\"\n                      aria-label=\"Edit\" \n                      className=\"align-self-end mb-2\"\n                      onClick={ () => this.updateTodo(todo) }\n                  >\n                    <Icon>edit_icon</Icon>\n                  </Fab>\n                  \n                  <Fab \n                      aria-label=\"Delete\" \n                      size=\"small\" \n                      className=\"deleteTodo align-self-end mb-2\"\n                      onClick={ () => this.deleteTodo(todo.id) }\n                  >\n                      <DeleteIcon />\n                  </Fab>\n                    \n                </div>\n              </div>\n          )\n        }\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500],\n    },\n  },\n  checked: {},\n};\n\n\n\n// const tmp_data = {\n//   \"name\": \"Yee\",\n//   \"description\" : \"Yee\",\n//   \"due\": \"2019-05-15 18:36:41\",\n//   \"createdAt\": \"2019-05-15 18:36:41\",\n//   \"updatedAt\": \"2019-05-15 18:36:41\",\n//   \"color\": \"EDEDED\"\n// }\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}